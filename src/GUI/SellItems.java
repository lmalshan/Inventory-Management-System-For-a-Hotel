/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Model.Stock;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperReport;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Dean
 */
public class SellItems extends javax.swing.JFrame {

    /**
     * Creates new form SellItems
     */
    public SellItems() {
        initComponents();
        showDate();
        showTime();

        btnCal.setEnabled(false);
        // btnPrint.setEnabled(false);

    }

    void showDate() {
        java.util.Date d = new java.util.Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        lblDate.setText(s.format(d));
    }

    void showTime() {
        new Timer(0, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                java.util.Date d = new java.util.Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
                lblTime.setText(s.format(d));
            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_view_sellList = new javax.swing.JTable();
        lblDate = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtItemID = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnCal = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ibiItemName = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblAvailableQty = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sell Items");
        setMaximumSize(new java.awt.Dimension(1050, 600));
        setMinimumSize(new java.awt.Dimension(1050, 600));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(12, 35, 51));
        jPanel1.setMaximumSize(new java.awt.Dimension(1050, 600));
        jPanel1.setMinimumSize(new java.awt.Dimension(1050, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(1050, 600));
        jPanel1.setLayout(null);

        jTable_view_sellList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Name", "Category", "Quantity", "Unit Price", "Sub-Total"
            }
        ));
        jTable_view_sellList.setToolTipText("");
        jTable_view_sellList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_view_sellListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_view_sellList);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(31, 217, 988, 289);

        lblDate.setBackground(new java.awt.Color(0, 0, 0));
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setText("Date");
        jPanel1.add(lblDate);
        lblDate.setBounds(164, 85, 109, 16);

        lblTime.setBackground(new java.awt.Color(0, 0, 0));
        lblTime.setForeground(new java.awt.Color(255, 255, 255));
        lblTime.setText("Time");
        jPanel1.add(lblTime);
        lblTime.setBounds(164, 114, 109, 16);

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Item ID :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(52, 151, 45, 15);

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Quantity :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(52, 180, 50, 15);

        txtItemID.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtItemID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtItemIDKeyTyped(evt);
            }
        });
        jPanel1.add(txtItemID);
        txtItemID.setBounds(150, 148, 117, 21);

        txtQty.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel1.add(txtQty);
        txtQty.setBounds(150, 177, 117, 21);

        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/images/math-add-icon.png"))); // NOI18N
        jButton1.setText("Add Item");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(298, 148, 140, 50);

        jButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/images/Status-dialog-error-icon (1).png"))); // NOI18N
        jButton2.setText("  Delete Item");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(490, 150, 140, 50);

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Total :");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(839, 524, 80, 35);

        lblTotal.setBackground(new java.awt.Color(0, 0, 0));
        lblTotal.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(255, 255, 255));
        lblTotal.setText("0.00");
        jPanel1.add(lblTotal);
        lblTotal.setBounds(919, 524, 100, 35);

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Sitka Heading", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Sell Items");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(456, 16, 158, 46);

        btnCal.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCal.setText("Calculate Bill");
        btnCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalActionPerformed(evt);
            }
        });
        jPanel1.add(btnCal);
        btnCal.setBounds(536, 531, 105, 23);

        jButton6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/images/Apps-Home-icon (1).png"))); // NOI18N
        jButton6.setText("Home");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(18, 13, 110, 42);

        btnPrint.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/images/Print-icon.png"))); // NOI18N
        btnPrint.setText("Print Bill");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrint);
        btnPrint.setBounds(330, 524, 129, 55);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Invoice Date :");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(52, 85, 79, 16);

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Invoice Time :");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(52, 114, 82, 16);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel2.setText("Name :");

        jLabel1.setText("Available :");

        jLabel9.setText("Details");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLabel9)
                .addGap(51, 51, 51))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAvailableQty, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(ibiItemName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(ibiItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(lblAvailableQty, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(782, 88, 237, 111);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_view_sellListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_view_sellListMouseClicked
        // TODO add your handling code here:
//        DefaultTableModel model = (DefaultTableModel)jTable_view_sellList.getModel();
//        int selectedRowIndex = jTable_view_sellList.getSelectedRow();
//        String id = (String) model.getValueAt(selectedRowIndex, 0);
//        int nid = Integer.parseInt(id);
    }//GEN-LAST:event_jTable_view_sellListMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int q = Integer.parseInt(txtQty.getText());
        int qleft = Integer.parseInt(lblAvailableQty.getText());

        if (qleft <= q) {
            JOptionPane.showMessageDialog(rootPane, "Stock finish");
        } else {
            try {
                int id = Integer.parseInt(txtItemID.getText());
                int qty = Integer.parseInt(txtQty.getText());
                String URL = "jdbc:sqlserver://localhost:1433;databaseName=InventoryDBB;user=sa;password=sa123";
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection conn = DriverManager.getConnection(URL);
                String sql = "Update [InventoryDBB].[dbo].[StockTable] set Quantity = Quantity -'" + qty + "' where ItemID = '" + id + "'";
                PreparedStatement st = conn.prepareStatement(sql);
                st.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
            try {

                viewSellList();

                JOptionPane.showMessageDialog(rootPane, "Item Added!");
                btnCal.setEnabled(true);
                btnPrint.setEnabled(true);

                txtItemID.setText("");
                txtQty.setText("");
                lblAvailableQty.setText("");
                ibiItemName.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(SellItems.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        ManagerHomePage mh = new ManagerHomePage();
        setVisible(false);
        mh.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        try {
            String URL = "jdbc:sqlserver://localhost:1433;databaseName=InventoryDBB;user=sa;password=sa123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(URL);

            JasperDesign jd = JRXmlLoader.load("C:\\Users\\Stefan\\Desktop\\2018 11 03\\2018-10-31 onwards\\ITPPRO_OWNER9_7\\src\\Reports\\invoiceReport.jrxml");
            //String sql = "select * from InvoiceTable2 a,InvoiceTable1 b inner join (selecet max(c.InvoiceNo) from InvoiceTable1 c) on a.InvoiceNo = b.InvoiceNo";
            String sql = "select a.InvoiceNo ,a.Date,a.Time,a.Total,b.ItemID,b.Description,b.Category,b.Qty,b.UnitPrice,b.SubTotal from InvoiceTable2 b,InvoiceTable1 a where a.InvoiceNo=b.InvoiceNo and a.InvoiceNo=(select max(InvoiceNo) from InvoiceTable1)";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
            JasperViewer.viewReport(jp, false);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable_view_sellList.getModel();
        int selectedRowIndex = jTable_view_sellList.getSelectedRow();
        int i = jTable_view_sellList.getSelectedRow();
        if (i >= 0) {
            try {
                int id = Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString());
                int qty = Integer.parseInt(model.getValueAt(selectedRowIndex, 3).toString());
                String URL = "jdbc:sqlserver://localhost:1433;databaseName=InventoryDBB;user=sa;password=sa123";
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection conn = DriverManager.getConnection(URL);
                String sql = "Update [InventoryDBB].[dbo].[StockTable] set Quantity = Quantity +'" + qty + "' where ItemID = '" + id + "'";
                PreparedStatement st = conn.prepareStatement(sql);
                st.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
            model.removeRow(i);

        } else {
            JOptionPane.showMessageDialog(this, "Nothing to delete");
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnCalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalActionPerformed
        // TODO add your handling code here:
        sendToInvoiceDB();
        DefaultTableModel model = (DefaultTableModel) jTable_view_sellList.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnCalActionPerformed

    private void txtItemIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemIDKeyTyped

    private void txtItemIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIDKeyReleased
        // TODO add your handling code here:
        int id = Integer.parseInt(txtItemID.getText());
        String query1 = "select * from StockTable where ItemID='" + id + "'";
        try {
            String URL = "jdbc:sqlserver://localhost:1433;databaseName=InventoryDBB;user=sa;password=sa123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(URL);
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query1);
            if (rs.next()) {
                ibiItemName.setText(rs.getString("Name"));
                lblAvailableQty.setText(rs.getString("Quantity"));
            } else {
                ibiItemName.setText("");
                lblAvailableQty.setText("");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_txtItemIDKeyReleased

    public void sellItem() {
        try {
            if ((!txtItemID.getText().isEmpty()) && (!txtQty.getText().isEmpty())) {
                int id = Integer.parseInt(txtItemID.getText());
                int qty = Integer.parseInt(txtQty.getText());
            }
        } catch (Exception e) {
        }
    }

    public ArrayList<Stock> sellList() throws SQLException {
        ArrayList<Stock> sellList = new ArrayList<>();

        try {
            String URL = "jdbc:sqlserver://localhost:1433;databaseName=InventoryDBB;user=sa;password=sa123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(URL);
            int id = Integer.parseInt(txtItemID.getText());
            String query1 = "select * from [InventoryDBB].[dbo].[StockTable] where ItemID = " + id;
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query1);
            Stock stock;
            while (rs.next()) {
                stock = new Stock(rs.getInt("ItemID"), rs.getString("Name"), rs.getString("Category"), rs.getInt("Quantity"), rs.getFloat("UnitPrice"), rs.getInt("SupplierID"), rs.getString("Date"));
                sellList.add(stock);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return sellList;
    }

    public void viewSellList() throws SQLException {
        ArrayList<Stock> list = sellList();
        DefaultTableModel model = (DefaultTableModel) jTable_view_sellList.getModel();
        Object[] row = new Object[6];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getItemID();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getCategory();
            row[3] = Integer.parseInt(txtQty.getText());
            row[4] = list.get(i).getUnitPrice();
            row[5] = (list.get(i).getUnitPrice()) * (Integer.parseInt(txtQty.getText()));
            model.addRow(row);

            float tot = 0;
            for (int j = 0; j < jTable_view_sellList.getRowCount(); j++) {
                String g = jTable_view_sellList.getValueAt(j, 5).toString();
                float amount = Float.parseFloat(g);
                tot += amount;
            }
            lblTotal.setText("" + tot);
        }

    }

    public void sendToInvoiceDB() {
        try {
            int rowcount = jTable_view_sellList.getRowCount();
            PreparedStatement pst;
            PreparedStatement pst2;
            String URL = "jdbc:sqlserver://localhost:1433;databaseName=InventoryDBB;user=sa;password=sa123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(URL);
            conn.setAutoCommit(false);

            float TotalPricce = Float.parseFloat(lblTotal.getText());
            String Date = (String) lblDate.getText();
            String Time = (String) lblTime.getText();
            String query = "insert into [InventoryDBB].[dbo].[InvoiceTable1] (Date,Time,Total) values ('" + Date + "','" + Time + "','" + TotalPricce + "')";
            pst = conn.prepareStatement(query);
            pst.execute();

            for (int row = 0; row < rowcount; row++) {
                int ItemID = (Integer) jTable_view_sellList.getValueAt(row, 0);
                String Description = (String) jTable_view_sellList.getValueAt(row, 1);
                String Category = (String) jTable_view_sellList.getValueAt(row, 2);
                int Quantity = (Integer) jTable_view_sellList.getValueAt(row, 3);
                float UnitPrice = (Float) jTable_view_sellList.getValueAt(row, 4);
                float SubTotal = (Float) jTable_view_sellList.getValueAt(row, 5);

                //String query = "insert into [InventoryDBB].[dbo].[InvoiceTable1] (ItemID,Description,Category,Quantity,UnitPrice,TotalPricce,Date,Time,SubTotal) values ('" + ItemID + "','" + Description + "','" + Category + "','" + Quantity + "','" + UnitPrice + "','" + TotalPricce + "','" + Date + "','" + Time + "','" + SubTotal + "')";
                String query1 = "select MAX(InvoiceNo) as inv from [InventoryDBB].[dbo].[InvoiceTable1]";
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(query1);

                while (rs.next()) {

                    int str = rs.getInt("inv");

                    String query2 = "insert into [InventoryDBB].[dbo].[InvoiceTable2] (ItemID,Description,Category,Qty,UnitPrice,SubTotal,InvoiceNo) values ('" + ItemID + "','" + Description + "','" + Category + "','" + Quantity + "','" + UnitPrice + "','" + SubTotal + "','" + str + "')";
                    pst2 = conn.prepareStatement(query2);
                    pst2.execute();

                }

                conn.setAutoCommit(true);

            }

            conn.close();
            JOptionPane.showMessageDialog(rootPane, "Successfully saved!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    /*public void sendInvoice() {
        try {
            String URL = "jdbc:sqlserver://localhost:1433;databaseName=InventoryDBB;user=sa;password=sa123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(URL);

            ArrayList<Stock> list = sellList();
            DefaultTableModel model = (DefaultTableModel) jTable_view_sellList.getModel();
            Object[] row = new Object[6];
            for (int i = 0; i < list.size(); i++) {
                int id = list.get(i).getItemID();
                String des = list.get(i).getName();
                String cat = list.get(i).getCategory();
                int qty = Integer.parseInt(txtQty.getText());
                float uprice = list.get(i).getUnitPrice();
                float tprice = (list.get(i).getUnitPrice()) * (Integer.parseInt(txtQty.getText()));
                String date = lblDate.getText();
                String time = lblTime.getText();

                String query1 = "insert into InvoieTable (ItemID,Description,Category,Quantity,UnitPrice,TotalPrice,Date,Time) "
                        + "values ('"+id+"','"+des+"','"+cat+"','"+qty+"','"+uprice+"','"+tprice+"','"+date+"','"+time+"')";
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(query1);

                model.addRow(row);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }*/

 /*public ArrayList<Stock> sendSellList() throws SQLException {
        ArrayList<Stock> sendSellList = new ArrayList<>();

        try {
            String URL = "jdbc:sqlserver://localhost:1433;databaseName=InventoryDBB;user=sa;password=sa123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(URL);
            String query1 = "insert into InvoiceTable(InvoiceNo,ItemID,Description,Category,Quantity,UnitPrice,TotalPrice,Date,Time) values ()";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query1);
            Stock stock;
            while (rs.next()) {
                stock = new Stock(rs.getInt("ItemID"), rs.getString("Name"), rs.getString("Category"), rs.getInt("Quantity"), rs.getFloat("UnitPrice"), rs.getInt("SupplierID"), rs.getString("Date"));
                sendSellList.add(stock);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return sellList;
    }
    
    public void sendSellList() throws SQLException {
        ArrayList<Invoice> list = sellList();
        DefaultTableModel model = (DefaultTableModel) jTable_view_sellList.getModel();
        Object[] row = new Object[6];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getItemID();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getCategory();
            row[3] = Integer.parseInt(txtQty.getText());
            row[4] = list.get(i).getUnitPrice();
            row[5] = (list.get(i).getUnitPrice()) * (Integer.parseInt(txtQty.getText()));
            model.addRow(row);
        }
    }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellItems().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCal;
    private javax.swing.JButton btnPrint;
    private javax.swing.JLabel ibiItemName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_view_sellList;
    private javax.swing.JLabel lblAvailableQty;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTextField txtItemID;
    private javax.swing.JTextField txtQty;
    // End of variables declaration//GEN-END:variables
}
